{"ast":null,"code":"import { PaperTable } from \"@/components\";\nimport ProductService from \"@/services/ProductService\";\nexport default {\n  components: {\n    PaperTable\n  },\n  data() {\n    return {\n      table1: {\n        title: \"Product List\",\n        subTitle: \"Manage all products available in the shop\",\n        columns: [\"Id\", \"Name\", \"Salary\", \"Country\", \"City\"],\n        data: [] // Dữ liệu sản phẩm từ JSON Server\n      },\n      showAddProductModal: false,\n      newProduct: {\n        id: null,\n        name: \"\",\n        salary: \"\",\n        country: \"\",\n        city: \"\"\n      }\n    };\n  },\n  created() {\n    this.fetchProducts();\n  },\n  methods: {\n    fetchProducts() {\n      ProductService.getProducts().then(response => {\n        this.table1.data = response.data;\n      }).catch(error => {\n        console.error(\"Error fetching products:\", error);\n      });\n    },\n    handleEditItem(item) {\n      console.log(\"Edit item:\", item);\n      // Logic chỉnh sửa ở đây\n    },\n    handleDeleteItem(item) {\n      ProductService.deleteProduct(item.id).then(() => {\n        this.table1.data = this.table1.data.filter(dataItem => dataItem.id !== item.id);\n      }).catch(error => {\n        console.error(\"Error deleting product:\", error);\n      });\n    },\n    addProduct() {\n      this.newProduct.id = this.table1.data.length + 1;\n      ProductService.addProduct(this.newProduct).then(response => {\n        this.table1.data.push(response.data); // Cập nhật dữ liệu từ JSON Server\n        this.resetNewProduct();\n        this.showAddProductModal = false;\n      }).catch(error => {\n        console.error(\"Error adding product:\", error);\n      });\n    },\n    resetNewProduct() {\n      this.newProduct = {\n        id: null,\n        name: \"\",\n        salary: \"\",\n        country: \"\",\n        city: \"\"\n      };\n    }\n  }\n};","map":{"version":3,"names":["PaperTable","ProductService","components","data","table1","title","subTitle","columns","showAddProductModal","newProduct","id","name","salary","country","city","created","fetchProducts","methods","getProducts","then","response","catch","error","console","handleEditItem","item","log","handleDeleteItem","deleteProduct","filter","dataItem","addProduct","length","push","resetNewProduct"],"sources":["src/pages/ProductManage.vue"],"sourcesContent":["<template>\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <card :title=\"table1.title\" :subTitle=\"table1.subTitle\">\n        <div slot=\"raw-content\" class=\"table-responsive\">\n          <paper-table \n            :data=\"table1.data\" \n            :columns=\"table1.columns\"\n            @edit-item=\"handleEditItem\"\n            @delete-item=\"handleDeleteItem\"\n          >\n          </paper-table>\n        </div>\n      </card>\n      <button class=\"btn btn-success mt-3\" @click=\"showAddProductModal = true\">Add new product</button>\n    </div>\n\n    <!-- Modal for Adding Product -->\n    <div v-if=\"showAddProductModal\" class=\"modal fade show\" tabindex=\"-1\" style=\"display: block;\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\">Add New Product</h5>\n            <button type=\"button\" class=\"close\" @click=\"showAddProductModal = false\">\n              <span>&times;</span>\n            </button>\n          </div>\n          <div class=\"modal-body\">\n            <form @submit.prevent=\"addProduct\">\n              <div class=\"form-group\">\n                <label for=\"name\">Name:</label>\n                <input type=\"text\" class=\"form-control\" v-model=\"newProduct.name\" required />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"salary\">Salary:</label>\n                <input type=\"text\" class=\"form-control\" v-model=\"newProduct.salary\" required />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"country\">Country:</label>\n                <input type=\"text\" class=\"form-control\" v-model=\"newProduct.country\" required />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"city\">City:</label>\n                <input type=\"text\" class=\"form-control\" v-model=\"newProduct.city\" required />\n              </div>\n              <button type=\"submit\" class=\"btn btn-primary mr-2\">Save</button>\n              <button type=\"button\" class=\"btn btn-secondary\" @click=\"showAddProductModal = false\">Cancel</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { PaperTable } from \"@/components\";\nimport ProductService from \"@/services/ProductService\";\n\nexport default {\n  components: {\n    PaperTable,\n  },\n  data() {\n    return {\n      table1: {\n        title: \"Product List\",\n        subTitle: \"Manage all products available in the shop\",\n        columns: [\"Id\", \"Name\", \"Salary\", \"Country\", \"City\"],\n        data: [], // Dữ liệu sản phẩm từ JSON Server\n      },\n      showAddProductModal: false,\n      newProduct: {\n        id: null,\n        name: \"\",\n        salary: \"\",\n        country: \"\",\n        city: \"\",\n      },\n    };\n  },\n  created() {\n    this.fetchProducts();\n  },\n  methods: {\n    fetchProducts() {\n      ProductService.getProducts()\n        .then(response => {\n          this.table1.data = response.data;\n        })\n        .catch(error => {\n          console.error(\"Error fetching products:\", error);\n        });\n    },\n    handleEditItem(item) {\n      console.log(\"Edit item:\", item);\n      // Logic chỉnh sửa ở đây\n    },\n    handleDeleteItem(item) {\n      ProductService.deleteProduct(item.id)\n        .then(() => {\n          this.table1.data = this.table1.data.filter(dataItem => dataItem.id !== item.id);\n        })\n        .catch(error => {\n          console.error(\"Error deleting product:\", error);\n        });\n    },\n    addProduct() {\n      this.newProduct.id = this.table1.data.length + 1;\n      ProductService.addProduct(this.newProduct)\n        .then(response => {\n          this.table1.data.push(response.data); // Cập nhật dữ liệu từ JSON Server\n          this.resetNewProduct();\n          this.showAddProductModal = false;\n        })\n        .catch(error => {\n          console.error(\"Error adding product:\", error);\n        });\n    },\n    resetNewProduct() {\n      this.newProduct = { id: null, name: \"\", salary: \"\", country: \"\", city: \"\" };\n    },\n  },\n};\n\n</script>\n\n<style scoped>\n.modal-body .form-control {\n  background-color: #f8f9fa; /* Màu nền nhạt */\n  border: 1px solid #ced4da; /* Viền nhẹ */\n  border-radius: 0.25rem; /* Góc bo tròn */\n}\n\n.modal-body .form-control:focus {\n  border-color: #80bdff; /* Viền khi focus vào input */\n  box-shadow: 0 0 0 0.2rem rgba(38, 143, 255, 0.25); /* Ánh sáng viền khi focus */\n}\n</style>\n"],"mappings":"AAwDA,SAAAA,UAAA;AACA,OAAAC,cAAA;AAEA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA;IACA;MACAC,MAAA;QACAC,KAAA;QACAC,QAAA;QACAC,OAAA;QACAJ,IAAA;MACA;MACAK,mBAAA;MACAC,UAAA;QACAC,EAAA;QACAC,IAAA;QACAC,MAAA;QACAC,OAAA;QACAC,IAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACAD,cAAA;MACAf,cAAA,CAAAiB,WAAA,GACAC,IAAA,CAAAC,QAAA;QACA,KAAAhB,MAAA,CAAAD,IAAA,GAAAiB,QAAA,CAAAjB,IAAA;MACA,GACAkB,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,6BAAAA,KAAA;MACA;IACA;IACAE,eAAAC,IAAA;MACAF,OAAA,CAAAG,GAAA,eAAAD,IAAA;MACA;IACA;IACAE,iBAAAF,IAAA;MACAxB,cAAA,CAAA2B,aAAA,CAAAH,IAAA,CAAAf,EAAA,EACAS,IAAA;QACA,KAAAf,MAAA,CAAAD,IAAA,QAAAC,MAAA,CAAAD,IAAA,CAAA0B,MAAA,CAAAC,QAAA,IAAAA,QAAA,CAAApB,EAAA,KAAAe,IAAA,CAAAf,EAAA;MACA,GACAW,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,4BAAAA,KAAA;MACA;IACA;IACAS,WAAA;MACA,KAAAtB,UAAA,CAAAC,EAAA,QAAAN,MAAA,CAAAD,IAAA,CAAA6B,MAAA;MACA/B,cAAA,CAAA8B,UAAA,MAAAtB,UAAA,EACAU,IAAA,CAAAC,QAAA;QACA,KAAAhB,MAAA,CAAAD,IAAA,CAAA8B,IAAA,CAAAb,QAAA,CAAAjB,IAAA;QACA,KAAA+B,eAAA;QACA,KAAA1B,mBAAA;MACA,GACAa,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,0BAAAA,KAAA;MACA;IACA;IACAY,gBAAA;MACA,KAAAzB,UAAA;QAAAC,EAAA;QAAAC,IAAA;QAAAC,MAAA;QAAAC,OAAA;QAAAC,IAAA;MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}