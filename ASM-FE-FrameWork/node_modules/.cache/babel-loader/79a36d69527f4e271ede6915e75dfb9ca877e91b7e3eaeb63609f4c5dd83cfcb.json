{"ast":null,"code":"import { PaperTable } from \"@/components\";\nimport ProductService from \"@/services/ProductService\";\nexport default {\n  components: {\n    PaperTable\n  },\n  data() {\n    return {\n      table1: {\n        title: \"Product List\",\n        subTitle: \"Manage all products available in the shop\",\n        columns: [\"Id\", \"Image\", \"Name\", \"Price\", \"Quantity\", \"Description\"],\n        data: []\n      },\n      showAddProductModal: false,\n      showEditProductModal: false,\n      newProduct: {\n        id: null,\n        img: null,\n        name: \"\",\n        price: \"\",\n        country: \"\",\n        city: \"\"\n      },\n      editProduct: null // Chứa sản phẩm cần chỉnh sửa\n    };\n  },\n  created() {\n    this.fetchProducts();\n  },\n  methods: {\n    fetchProducts() {\n      ProductService.getProducts().then(response => {\n        this.table1.data = response.data;\n      }).catch(error => {\n        console.error(\"Error fetching products:\", error);\n      });\n    },\n    handleEditItem(item) {\n      this.editProduct = {\n        ...item\n      }; // Tạo bản sao để chỉnh sửa\n      this.showEditProductModal = true;\n    },\n    updateProduct() {\n      ProductService.updateProduct(this.editProduct.id, this.editProduct).then(() => {\n        const index = this.table1.data.findIndex(product => product.id === this.editProduct.id);\n        if (index !== -1) {\n          this.table1.data.splice(index, 1, {\n            ...this.editProduct\n          });\n        }\n        this.showEditProductModal = false;\n        this.editProduct = null;\n      }).catch(error => {\n        console.error(\"Error updating product:\", error);\n      });\n    },\n    handleDeleteItem(item) {\n      ProductService.deleteProduct(item.id).then(() => {\n        this.table1.data = this.table1.data.filter(dataItem => dataItem.id !== item.id);\n      }).catch(error => {\n        console.error(\"Error deleting product:\", error);\n      });\n    },\n    addProduct() {\n      ProductService.addProduct(this.newProduct).then(response => {\n        this.table1.data.push(response.data);\n        this.resetNewProduct();\n        this.showAddProductModal = false;\n      }).catch(error => {\n        console.error(\"Error adding product:\", error);\n      });\n    },\n    resetNewProduct() {\n      this.newProduct = {\n        id: null,\n        name: \"\",\n        salary: \"\",\n        country: \"\",\n        city: \"\"\n      };\n    }\n  }\n};","map":{"version":3,"names":["PaperTable","ProductService","components","data","table1","title","subTitle","columns","showAddProductModal","showEditProductModal","newProduct","id","img","name","price","country","city","editProduct","created","fetchProducts","methods","getProducts","then","response","catch","error","console","handleEditItem","item","updateProduct","index","findIndex","product","splice","handleDeleteItem","deleteProduct","filter","dataItem","addProduct","push","resetNewProduct","salary"],"sources":["src/pages/ProductManage.vue"],"sourcesContent":["<template>\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <card :title=\"table1.title\" :subTitle=\"table1.subTitle\">\n        <div slot=\"raw-content\" class=\"table-responsive\">\n          <paper-table \n            :data=\"table1.data\" \n            :columns=\"table1.columns\"\n            @edit-item=\"handleEditItem\"\n            @delete-item=\"handleDeleteItem\"\n          >\n          </paper-table>\n        </div>\n      </card>\n      <button class=\"btn btn-success mt-3\" @click=\"showAddProductModal = true\">Add new product</button>\n    </div>\n\n    <!-- Modal for Adding Product -->\n    <div v-if=\"showAddProductModal\" class=\"modal fade show\" tabindex=\"-1\" style=\"display: block;\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\">Add New Product</h5>\n            <button type=\"button\" class=\"close\" @click=\"showAddProductModal = false\">\n              <span>&times;</span>\n            </button>\n          </div>\n          <div class=\"modal-body\">\n            <form @submit.prevent=\"addProduct\">\n              <div class=\"form-group\">\n                <label for=\"name\">Name:</label>\n                <input type=\"text\" class=\"form-control\" v-model=\"newProduct.name\" required />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"salary\">Salary:</label>\n                <input type=\"text\" class=\"form-control\" v-model=\"newProduct.salary\" required />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"country\">Country:</label>\n                <input type=\"text\" class=\"form-control\" v-model=\"newProduct.country\" required />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"city\">City:</label>\n                <input type=\"text\" class=\"form-control\" v-model=\"newProduct.city\" required />\n              </div>\n              <button type=\"submit\" class=\"btn btn-primary mr-2\">Save</button>\n              <button type=\"button\" class=\"btn btn-secondary\" @click=\"showAddProductModal = false\">Cancel</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Modal for Editing Product -->\n    <div v-if=\"showEditProductModal\" class=\"modal fade show\" tabindex=\"-1\" style=\"display: block;\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\">Edit Product</h5>\n            <button type=\"button\" class=\"close\" @click=\"showEditProductModal = false\">\n              <span>&times;</span>\n            </button>\n          </div>\n          <div class=\"modal-body\">\n            <form @submit.prevent=\"updateProduct\">\n              <div class=\"form-group\">\n                <label for=\"name\">Name:</label>\n                <input type=\"text\" class=\"form-control\" v-model=\"editProduct.name\" required />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"salary\">Salary:</label>\n                <input type=\"text\" class=\"form-control\" v-model=\"editProduct.salary\" required />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"country\">Country:</label>\n                <input type=\"text\" class=\"form-control\" v-model=\"editProduct.country\" required />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"city\">City:</label>\n                <input type=\"text\" class=\"form-control\" v-model=\"editProduct.city\" required />\n              </div>\n              <button type=\"submit\" class=\"btn btn-primary mr-2\">Save Changes</button>\n              <button type=\"button\" class=\"btn btn-secondary\" @click=\"showEditProductModal = false\">Cancel</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { PaperTable } from \"@/components\";\nimport ProductService from \"@/services/ProductService\";\n\nexport default {\n  components: {\n    PaperTable,\n  },\n  data() {\n    return {\n      table1: {\n        title: \"Product List\",\n        subTitle: \"Manage all products available in the shop\",\n        columns: [\"Id\", \"Image\", \"Name\", \"Price\", \"Quantity\", \"Description\"],\n        data: [],\n      },\n      showAddProductModal: false,\n      showEditProductModal: false,\n      newProduct: {\n        id: null,\n        img: null,\n        name: \"\",\n        price: \"\",\n        country: \"\",\n        city: \"\",\n      },\n      editProduct: null, // Chứa sản phẩm cần chỉnh sửa\n    };\n  },\n  created() {\n    this.fetchProducts();\n  },\n  methods: {\n    fetchProducts() {\n      ProductService.getProducts()\n        .then(response => {\n          this.table1.data = response.data;\n        })\n        .catch(error => {\n          console.error(\"Error fetching products:\", error);\n        });\n    },\n    handleEditItem(item) {\n      this.editProduct = { ...item }; // Tạo bản sao để chỉnh sửa\n      this.showEditProductModal = true;\n    },\n    updateProduct() {\n      ProductService.updateProduct(this.editProduct.id, this.editProduct)\n        .then(() => {\n          const index = this.table1.data.findIndex(product => product.id === this.editProduct.id);\n          if (index !== -1) {\n            this.table1.data.splice(index, 1, { ...this.editProduct });\n          }\n          this.showEditProductModal = false;\n          this.editProduct = null;\n        })\n        .catch(error => {\n          console.error(\"Error updating product:\", error);\n        });\n    },\n    handleDeleteItem(item) {\n      ProductService.deleteProduct(item.id)\n        .then(() => {\n          this.table1.data = this.table1.data.filter(dataItem => dataItem.id !== item.id);\n        })\n        .catch(error => {\n          console.error(\"Error deleting product:\", error);\n        });\n    },\n    addProduct() {\n      ProductService.addProduct(this.newProduct)\n        .then(response => {\n          this.table1.data.push(response.data);\n          this.resetNewProduct();\n          this.showAddProductModal = false;\n        })\n        .catch(error => {\n          console.error(\"Error adding product:\", error);\n        });\n    },\n    resetNewProduct() {\n      this.newProduct = { id: null, name: \"\", salary: \"\", country: \"\", city: \"\" };\n    },\n  },\n};\n</script>\n\n<style scoped>\n.modal-body .form-control {\n  background-color: #f8f9fa;\n  border: 1px solid #ced4da;\n  border-radius: 0.25rem;\n}\n\n.modal-body .form-control:focus {\n  border-color: #80bdff;\n  box-shadow: 0 0 0 0.2rem rgba(38, 143, 255, 0.25);\n}\n</style>\n"],"mappings":"AA4FA,SAAAA,UAAA;AACA,OAAAC,cAAA;AAEA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA;IACA;MACAC,MAAA;QACAC,KAAA;QACAC,QAAA;QACAC,OAAA;QACAJ,IAAA;MACA;MACAK,mBAAA;MACAC,oBAAA;MACAC,UAAA;QACAC,EAAA;QACAC,GAAA;QACAC,IAAA;QACAC,KAAA;QACAC,OAAA;QACAC,IAAA;MACA;MACAC,WAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACAD,cAAA;MACAlB,cAAA,CAAAoB,WAAA,GACAC,IAAA,CAAAC,QAAA;QACA,KAAAnB,MAAA,CAAAD,IAAA,GAAAoB,QAAA,CAAApB,IAAA;MACA,GACAqB,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,6BAAAA,KAAA;MACA;IACA;IACAE,eAAAC,IAAA;MACA,KAAAX,WAAA;QAAA,GAAAW;MAAA;MACA,KAAAnB,oBAAA;IACA;IACAoB,cAAA;MACA5B,cAAA,CAAA4B,aAAA,MAAAZ,WAAA,CAAAN,EAAA,OAAAM,WAAA,EACAK,IAAA;QACA,MAAAQ,KAAA,QAAA1B,MAAA,CAAAD,IAAA,CAAA4B,SAAA,CAAAC,OAAA,IAAAA,OAAA,CAAArB,EAAA,UAAAM,WAAA,CAAAN,EAAA;QACA,IAAAmB,KAAA;UACA,KAAA1B,MAAA,CAAAD,IAAA,CAAA8B,MAAA,CAAAH,KAAA;YAAA,QAAAb;UAAA;QACA;QACA,KAAAR,oBAAA;QACA,KAAAQ,WAAA;MACA,GACAO,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,4BAAAA,KAAA;MACA;IACA;IACAS,iBAAAN,IAAA;MACA3B,cAAA,CAAAkC,aAAA,CAAAP,IAAA,CAAAjB,EAAA,EACAW,IAAA;QACA,KAAAlB,MAAA,CAAAD,IAAA,QAAAC,MAAA,CAAAD,IAAA,CAAAiC,MAAA,CAAAC,QAAA,IAAAA,QAAA,CAAA1B,EAAA,KAAAiB,IAAA,CAAAjB,EAAA;MACA,GACAa,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,4BAAAA,KAAA;MACA;IACA;IACAa,WAAA;MACArC,cAAA,CAAAqC,UAAA,MAAA5B,UAAA,EACAY,IAAA,CAAAC,QAAA;QACA,KAAAnB,MAAA,CAAAD,IAAA,CAAAoC,IAAA,CAAAhB,QAAA,CAAApB,IAAA;QACA,KAAAqC,eAAA;QACA,KAAAhC,mBAAA;MACA,GACAgB,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,0BAAAA,KAAA;MACA;IACA;IACAe,gBAAA;MACA,KAAA9B,UAAA;QAAAC,EAAA;QAAAE,IAAA;QAAA4B,MAAA;QAAA1B,OAAA;QAAAC,IAAA;MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}